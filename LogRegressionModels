### MACHINE LEARNING PREDICTIVE MODELING

### Logistic Regression
#### Load glm2
```{r }
library(glm2)
```

#### First perform univariate logistic regression for each important feature ## 

##### Age
```{r}
agemodel <- glm(Survived ~ Age, family="binomial", data= train)
summary(agemodel)
exp(cbind(OR = coef(agemodel), confint(agemodel))) # odds ratios and 95% CI
```

##### Sex
```{r}
sexmodel <- glm(Survived ~ Sex, family="binomial", data= train)
summary(sexmodel)
exp(cbind(OR = coef(sexmodel), confint(sexmodel))) # odds ratios and 95% CI
```

##### Cabin class
```{r}
Pclassmodel <- glm(Survived ~ Pclass, family="binomial", data= train)
summary(Pclassmodel)
exp(cbind(OR = coef(Pclassmodel), confint(Pclassmodel))) # odds ratios and 95% CI
```

##### 3rdclass
```{r}
thirdclassmodel <- glm(Survived ~ thirdClass, family="binomial", data= train)
summary(thirdclassmodel)
exp(cbind(OR = coef(thirdclassmodel), confint(thirdclassmodel))) # odds ratios and 95% CI
```

##### Sibs/spouse
```{r}
sibsmodel <- glm(Survived ~ SibSp, family="binomial", data= train)
summary(sibsmodel)
exp(cbind(OR = coef(sibsmodel), confint(sibsmodel))) # odds ratios and 95% CI
```

##### Parents/children
```{r}
Parchmodel <- glm(Survived ~ Parch, family="binomial", data= train)
summary(Parchmodel)
exp(cbind(OR = coef(Parchmodel), confint(Parchmodel))) # odds ratios and 95% CI
```

##### Fare
```{r}
faremodel <- glm(Survived ~ Fare, family="binomial", data= train)
summary(faremodel)
exp(cbind(OR = coef(faremodel), confint(faremodel))) # odds ratios and 95% CI
```

##### Embarked
```{r warning = FALSE}
embmodel <- glm(Survived ~ Embarked, family="binomial", data= train)
summary(embmodel)
exp(cbind(OR = coef(embmodel), confint(embmodel))) # odds ratios and 95% CI
```

##### Family size
```{r}
fsmodel <- glm(Survived ~ familysize, family="binomial", data= train)
summary(fsmodel)
exp(cbind(OR = coef(fsmodel), confint(fsmodel))) # odds ratios and 95% CI
```

##### Small family
```{r}
smfammodel <- glm(Survived ~ smallfamily, family="binomial", data= train)
summary(smfammodel)
exp(cbind(OR = coef(smfammodel), confint(smfammodel))) # odds ratios and 95% CI
```

##### Not alone
```{r}
namodel <- glm(Survived ~ notalone, family="binomial", data= train)
summary(namodel)
exp(cbind(OR = coef(namodel), confint(namodel))) # odds ratios and 95% CI
```

##### Child
```{r}
kidmodel <- glm(Survived ~ Child, family="binomial", data= train)
summary(kidmodel)
exp(cbind(OR = coef(kidmodel), confint(kidmodel))) # odds ratios and 95% CI
```

##### Title
```{r warning = FALSE}
titlemodel <- glm(Survived ~ title, family="binomial", data= train)
summary(titlemodel)
exp(cbind(OR = coef(titlemodel), confint(titlemodel))) # odds ratios and 95% CI
```


### Multivariable logistic regression models
```{r}
model1 <- (step(glm(Survived ~ Sex+smallfamily+notalone+Parch+Child+Age+Fare+thirdClass+SibSp, family="binomial", data= data3 ),direction= "backward"))
summary(model1)
exp(cbind(OR = coef(model1), confint(model1))) # odds ratios and 95% CI
```

```{r}
model2 <- (step(glm(Survived ~ Sex+Pclass+smallfamily+notalone+Child+Age+Fare, family="binomial", data= train ),direction= "backward"))
summary(model2)
exp(cbind(OR = coef(model1), confint(model1))) # odds ratios and 95% CI
```

```{r}
model3 <- glm(Survived ~ Sex+Pclass+smallfamily+notalone+Child, family="binomial", data= train)
summary(model3)
exp(cbind(OR = coef(model3), confint(model3))) # odds ratios and 95% CI
```
```

```{r}
model4 <- glm(Survived ~ Sex+Pclass+smallfamily+notalone+Child+Age+Fare, family="binomial", data= train)
summary(model4)
exp(cbind(OR = coef(model4), confint(model4))) # odds ratios and 95% CI
```

### Classification statistics and AUROC analysis

#### Load caret and pROC packages 
```{r }
library(caret)
library(pROC)
```

#### Model performance
```{r}
train$SurvivedYhat <- predict(model4, type = "response")  # generate yhat values on train df
train$SurvivedYhat <- ifelse(train$SurvivedYhat > 0.5, 1.0, 0.0)  # set binary prediction threshold
confusionMatrix(train$Survived,train$SurvivedYhat)  # run confusionMatrix to assess accuracy
auc(roc(train$Survived,train$SurvivedYhat))  # calculate AUROC curve 

```

#### Generate predicted values in test data for best model "model4" 
```{r}
test$Survived <- predict(model4, newdata = test, type = "response")  
test$Survived <- ifelse(test$Survived > 0.5, 1.0, 0.0)  # set binary prediction threshold

testSubmission <- data.frame(cbind(test$PassengerId, test$Survived))
colnames(testSubmission) <- c("PassengerId", "Survived")
```

#### write csv file for submission
```{r}
# save csv file for submission
write.csv(testSubmission, "Submissionlogmodel4.csv", row.names = FALSE)
```

#### RESULTS:    
**model3  (Sex+Pclass+smallfamily+notalone+Child); accuracy = 0.78947 placing 1547/3911 entries**    
**model4 (Sex+Pclass+smallfamily+notalone+Child+Age+Fare); accuracy = 0.7790, worse than model3**
